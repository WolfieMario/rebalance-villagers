# This file provides general configuration of the plugin. If you want to configure the offers generated by villagers,
# see 'offers.yml' instead.

# Configuration for offer removal. Note that in 1.3 offers are never removed until the GUI is closed, and the final
# offer slot is never removed because offers would be removed faster than they are added. This is vanilla Minecraft
# behavior, and will change in 1.4
offer-removal:

    # Whether or not to remove offers. Plugin default is false, vanilla default is true.
    remove-offers: false

    # Offer removal range. These values are not used if 'remove-offers' is set to false.
    # If an offer has been used at least 'minimum' times, it may randomly be removed. If it has
    # been used more than 'maximum' times, it is guaranteed to be removed, as long as it is the last trade made before
    # the GUI is closed and it is not the final offer slot. These are vanilla mechanics.
    # Plugin defaults are 20 and 40, while vanilla defaults are 3 and 13.
    removal-chance:
        minimum: 20
        maximum: 40
    
    # The number of ticks, after the trading GUI is closed, before an offer is removed. Vanilla default is 20.
    # Note: this property and 'offer-generation.generation-ticks' effectively override each other: offers are generated
    # and removed simultaneously, and the last action (causing removal or causing generation) determines the actual
    # number of ticks before *both* removal and generation occur.
    removal-ticks: 20
    
    
offer-generation:
    
    # The maximum number of offers a villager can have by default. The number of offers generated is random, due to the
    # nature of the vanilla scheme behind offer generation, and may be as few as one. Of course, a villager will never
    # generate more offers than it has unique potential offers, so a large value such as 200 will have no different
    # effects as compared to 1000 (this is assuming the villager does not have more than 200 potential offers - if it 
    # does, you've sure been busy configuring!). The vanilla default is 1.
    default-offer-count: 1
    
    # See above for details. This is the maximum number of offers a villager can generate after a trade.
    # The vanilla default is 1.
    new-offer-count: 1
    
    # The number of ticks, after the trading GUI is closed, before an offer is generated. Vanilla default is 60.
    # Note: this property and 'offer-removal.removal-ticks' effectively override each other: offers are generated and
    # removed simultaneously, and the last action (causing removal or causing generation) determines the actual number
    # of ticks before *both* removal and generation occur.
    generation-ticks: 60
    
    # If set to true, allows new offers to be generated after any trade. By default, new offers are only generated
    # after a trade with the final offer slot - hence the vanilla default is false. Note that, if you are setting
    # this to true, you may want to adjust the next property as well.
    for-any-trade: false
    
    # The chance of a new offer(s) being generated after trading. If for-any-trade is set to true, this applies to any
    # trade, otherwise it only applies to trades made with the last offer slot. Setting this to 0 means new offers will
    # not generate at all. Setting it to 100 (the vanilla default) means an offer will always attempt to generate if
    # the proper conditions are fulfilled.
    # Note that this probability may seem misleading: if you set it to 50, it would be a 50% chance for *every*
    # transaction capable of generating offers, not a 50% chance every time the trading GUI is closed.
    probability: 100
    
    
general-trading:
    
    # The number of ticks that a villager's particle effect (for offer generation or removal) lasts.
    # The vanilla default is 200.
    particle-ticks: 200
    
    # The number of ticks that the plugin should check if there are only inactive offers left.
    # If so, at least the first offer will be activated again
    # Setting this to 0 will disable this feature - keep in mind that you eventually get a villager with no active offers from time to time
    dryrun-check-ticks: 100
    
    # My failed attempt to allow multiple people to trade a villager at the same time. Instead, if it is set to true,
    # and a player is already in the trading GUI with a villager, and another player rightclicks the same villager, the
    # first player is kicked from the trading GUI (dropping any items they had put in the villager's slots), and the
    # second player briefly sees the trading GUI before also getting kicked from it. Obviously, the default value is
    # false; if you set it to true, expect some arguments and trolling.
    allow-bickering: false
    
    # Whether or not players can trade with villager children. The vanilla default is false.
    can-trade-children: false
    
    
general:
    
    # The maximum health of a villager. Depending on spawning conditions (such as villagers spawned by other plugins),
    # villagers may have more health than their maximum health. A splash potion of healing will fix this.
    # The vanilla default is 20.
    max-health: 20
    
    # Whether or not a villager can take any form of damage. If 'false', all villagers are rendered fully invulnerable
    # to most typical sources of harm. The vanilla default is true.
    allow-damage: true
    
    # The villager professions which are allowed to spawn naturally. This also applies to spawn eggs and breeding.
    # 0 = Farmer
    # 1 = Librarian
    # 2 = Priest
    # 3 = Blacksmith
    # 4 = Butcher
    # 5 = Unused green-robed villager
    # 6+ appear identical to 5.
    # The list is enclosed in brackets, and the vanilla default is [0, 1, 2, 3, 4]
    # To make some professions more common than others, simply list it more than once.
    allowed-spawn-professions: [0, 1, 2, 3, 4]
    

# IF YOU DO NOT HAVE THE SHOPKEEPERS PLUGIN INSTALLED, DO NOT WORRY ABOUT SETTINGS BEYOND THIS POINT.
# (It's tl;dr anyways)
# 
# When Shopkeepers creates a shopkeeper, they are first created as a normal villager and *then* become a shopkeeper.
# Rebalance Villagers is only notified when a villager is created, so if you have Shopkeepers installed, this plugin
# will watch a villager for a set amount of time after it is created. If it is not registered as a shopkeeper within
# that time frame, it is converted into a BalancedVillager - the custom villager type this plugin uses.
# 
# What does that mean to you? Well, if your server is slow, you'll have to make these numbers larger. The total amount
# of time this plugin gives for Shopkeepers to register a shopkeeper is 'times-to-check' multiplied by
# 'time-between-checks', and the result is in milliseconds. 1000 milliseconds is 1 second, and you should avoid making
# the total time any longer than this.
# 
# Warning: if you make these numbers too small, Rebalance Villagers may give up waiting too soon: as a result, you will
# not get a shopkeeper, and each time Shopkeepers is reloaded it may attempt to spawn another shopkeeper (this too can
# fail, leading to more and more villagers piling up each time you reload the plugin). In addition, if these numbers
# are too small and you attempt to spawn villagers with a third plugin, such as Voxelsniper, the server may crash
# because Rebalance Villagers is attempting to convert a villager too soon.
# 
# It's always safer to make these numbers larger than they need to be. The only negative consequence is, if a third
# plugin such as Voxelsniper is used to create villagers, and somebody rightclicks these villagers before the waiting
# time is up, they will have a vanilla Minecraft offer generate. By keeping 'times-to-check' * 'time-between-checks'
# fewer than 1000, this is extremely unlikely.
shopkeepers:
    
    # The number of times this plugin checks whether a custom villager has become a Shopkeeper. Default value is 5.
    times-to-check: 5
    
    # The amount of time, in milliseconds, between each check. Default value is 50; it is recommended to make this
    # value larger than times-to-check for performance.
    time-between-checks: 50